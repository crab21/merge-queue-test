
name: Prompt Queue on PR Ready

run-name: "On PR Ready, PR number: ${{ github.event.pull_request.number }}"

on:
  pull_request_review:
    types: [submitted]
env:
  GH_TOKEN: ${{ secrets.GH_BOT_TOKEN }}
  TRIGGER_BRANCH_NAME: master
  PR_NU_PATH: /tmp/tools/scripts/merge-queue/pr.nu
  GH_USER: crab21
  SLACK_MERGE_QUEUE_CHANNEL: "C09AGCDGMBP"
  MergeQueueFileName: "merge-queue.yaml"
jobs:
  prompt-queue:
    if: github.event_name == 'pull_request_review' && github.event.review.state == 'approved'
    runs-on: ubuntu-latest
    steps:
      - uses: hustcer/setup-nu@main
        with:
          version: "0.105.1"
      - name: checkout tools
        shell: nu {0}
        run: |
          use std log
          use std
          # git clone --progress -v --depth 1 --filter=blob:none --no-checkout $'https://($env.GH_USER):($env.GH_TOKEN)@github.com/lotusflare/rhino.git' /tmp/tools o+e>| save -f /tmp/tools.log
          git clone --progress -v --depth 1 --filter=blob:none --no-checkout $'https://peiyuanwang0:($env.GH_USER_TOKEN)@github.com/lotusflare/rhino.git' /tmp/tools o+e>| save -f /tmp/tools.log
          let currPwd = pwd
          cd /tmp/tools
          git sparse-checkout init --cone o+e> (std null-device)
          git sparse-checkout set scripts/merge-queue o+e> (std null-device)
          git checkout main o+e>| save -f /tmp/tools.log
          ^ls -allh scripts/merge-queue
          cd $currPwd

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref}}
      - name: dl `codeowners`
        shell: nu {0}

        run: |
          use std log
          export-env {
            $env.BRANCH_NAME = echo ${{ github.event.pull_request.base.ref }}
          }
          print ${{ github.event.pull_request.base.ref }}
          print ${{ github.event.pull_request.head.ref }}
          nu $env.PR_NU_PATH cloneFile


      - name: check open and approval
        shell: nu {0}
        id: check-approvals

        run: |
          use std log
          log info "pr approval"
          let prNumber = echo ${{ github.event.pull_request.number }}
          nu $env.PR_NU_PATH checkAllChecks $prNumber ({ 
                skipStepNames: ["checkHasNotMergeLabel"],
                containStepNames: ["checkApproval", "checkPROpen"]
              } | to json )
          echo  "approved=true" |  save --append $env.GITHUB_OUTPUT

      - name: Prompt user to comment /queue
        shell: nu {0}

        run: |
          use std log
          let prNumber = echo ${{ github.event.pull_request.number }}
          let body = '
            âœ… PR has been approved.
            Please make sure `merge-gatekeeper` action check have passed.
            Then you can comment: `/queue` or `/q` to add this PR to the merge queue.'
          gh api --method POST -H "Accept: application/vnd.github+json" -H "X-GitHub-Api-Version: 2022-11-28" $"/repos/($env.GITHUB_REPOSITORY)/issues/($prNumber)/comments" -f $"body=($body)"
